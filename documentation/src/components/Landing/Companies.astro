---
import { getPathParamsFromId, getTextLocalized, translations } from "../../languages";

const mainCompanies = [
  {
    url: "aviasales.png",
    alt: "Aviasales",
    yOffset: true,
    scale: 0.8,
  },
  {
    url: "space307.svg",
    alt: "space307",
  },
  {
    url: "unicef.svg",
    alt: "UNICEF (United Nations Children’s Fund)",
  },
  {
    url: 'yandex.svg',
    alt: 'Yandex',
  },
  {
    url: "sber.png",
    alt: "Sber",
  },
  {
    url: "avito.svg",
    alt: "Avito",
    scale: 1.4,
  },
  {
    url: "mts.svg",
    alt: "MTS",
    scale: 0.6,
  },
  {
    url: "raiffeisen.svg",
    alt: "Raiffeisen Bank Russia",
  },
  {
    url: "joom.svg",
    alt: "Joom Group",
  },
  {
    url: "okoo.png",
    alt: "Okoo",
    yOffset: true,
    scale: 0.8,
  },
];

const otherCompanies = [
  {
    url: "smartomato.svg",
    alt: "смартомато",
    scale: 1.3,
  },
  {
    url: "healthSamurai.svg",
    alt: "Health Samurai",
  },
  {
    url: "docsvision.png",
    alt: "Docsvision",
    scale: 1.2,
  },
  {
    url: "redmadrobot.png",
    alt: "REDMADROBOT",
    yOffset: true,
  },
  {
    url: "travelpayouts.svg",
    alt: "Travelpayouts",
  },
  {
    url: "junto.png",
    alt: "Junto",
  },
  {
    url: "automationhero.svg",
    alt: "automation hero",
  },
  {
    url: "radity.png",
    alt: "Radity",
  },
  {
    url: "globalCtoForum.png",
    alt: "Global CTO Forum",
  },
  {
    url: "express24.svg",
    alt: "Express24",
    scale: 1.4,
  },
  {
    url: "stellarX.svg",
    alt: "StellarX",
  },
  {
    url: "stmLabs.png",
    alt: "STM Labs",
  },
  {
    url: "tenpixls.png",
    alt: "TenPixls",
  },
  {
    url: "uptarget.png",
    alt: "Uptarget",
  },
  {
    url: "foxford.svg",
    alt: "Фоксфорд",
  },
  {
    url: "codengage.png",
    alt: "Codengage",
  },
  {
    url: "lunatask.png",
    alt: "Lunatask",
  },
  {
    url: "semrush.png",
    alt: "Semrush",
  },
  {
    url: "intouchHealth.png",
    alt: "Intouch Health, a Teladoc company",
  },
  {
    url: 'belet.svg',
    alt: 'Belet',
  },
  {
    url: 'eqwile.png',
    alt: 'Eqwile',
  },
  {
    url: 'alma.png',
    alt: 'ALMA Services Company',
    scale: 1.4,
  },
  {
    url: 'mindbox.png',
    alt: 'Mindbox',
  },
  {
    url: 'novasama.png',
    alt: 'NOVASAMA Technologies',
  },
  {
    url: 'ti-innotech.svg',
    alt: 'TI Innotech',
  },
  {
    url: 'timeweb-cloud.svg',
    alt: 'Timeweb Cloud',
  },
  {
    url: 'transparent-technology.svg',
    alt: 'Transparent Technology',
  },
];

const { lang } = getPathParamsFromId(Astro.url.pathname);

---

<section class="companies">
  <h3>
    {getTextLocalized(translations.Landing.Companies.title, lang)}
  </h3>

  <div class="embla">
    <div class="embla__viewport">
      <div class="embla__container">
        {mainCompanies.map(({ alt, url, scale }) => (
          <div class="embla__slide">
            <img 
              style={{ "--logo-scale": scale ?? null }}
              class="slide-image" alt={alt}
              src={`/logo/${url}`}
              title={alt}
            />
          </div>
        ))}
      </div>

      <button class="embla__control embla__prev">
        <svg class="embla__button__svg" viewBox="0 0 532 532">
          <path
            fill="currentColor"
            d="M355.66 11.354c13.793-13.805 36.208-13.805 50.001 0 13.785 13.804 13.785 36.238 0 50.034L201.22 266l204.442 204.61c13.785 13.805 13.785 36.239 0 50.044-13.793 13.796-36.208 13.796-50.002 0a5994246.277 5994246.277 0 0 0-229.332-229.454 35.065 35.065 0 0 1-10.326-25.126c0-9.2 3.393-18.26 10.326-25.2C172.192 194.973 332.731 34.31 355.66 11.354Z"
          ></path>
        </svg>
      </button>
      
      <button class="embla__control embla__next">
        <svg class="embla__button__svg" viewBox="0 0 532 532">
          <path
            fill="currentColor"
            d="M176.34 520.646c-13.793 13.805-36.208 13.805-50.001 0-13.785-13.804-13.785-36.238 0-50.034L330.78 266 126.34 61.391c-13.785-13.805-13.785-36.239 0-50.044 13.793-13.796 36.208-13.796 50.002 0 22.928 22.947 206.395 206.507 229.332 229.454a35.065 35.065 0 0 1 10.326 25.126c0 9.2-3.393 18.26-10.326 25.2-45.865 45.901-206.404 206.564-229.332 229.52Z"
          ></path>
        </svg>
      </button>
    </div>
  </div>

  <ul class="companies-list">
    {
      otherCompanies.map(({ url, alt, yOffset, scale }, index) => {
        return (
          <li
            id={index >= 10 ? 'hide-by-default' : undefined}
            class="companies-item"
            data-logo-offset={yOffset}
            style={{ "--logo-scale": scale ?? null }}
          >
            <img alt={alt} src={`/logo/${url}`} title={alt} />
          </li>
        );
      })
    }
  </ul>

  <div class="companies-bottom-block">
    <button class="companies-see-all">
      {getTextLocalized(translations.Landing.Companies.seeAll, lang)}
    </button>

    <div class="companies-add-yours">
      <span>
        {getTextLocalized(translations.Landing.Companies.wantToAppear, lang)}
      </span>
      <a href="https://github.com/effector/effector/issues/278">
        {getTextLocalized(translations.Landing.Companies.tellUs, lang)}
      </a>
    </div>
  </div>
</section>

<script>
  import EmblaCarousel from 'embla-carousel';
  import AutoplayPlugin from 'embla-carousel-autoplay';

  function setupCompaniesBlock() {
    const button = document.querySelector('.companies-see-all') as HTMLElement;
    const otherCompaniesBlock = document.querySelector('.companies-list') as HTMLElement;

    const emblaNode = document.querySelector('.embla') as HTMLElement;
    const viewportNode = emblaNode.querySelector('.embla__viewport') as HTMLElement;

    const emblaApi = EmblaCarousel(viewportNode, { loop: true }, [AutoplayPlugin()]);

    button.addEventListener('click', () => {
      otherCompaniesBlock.style.display = 'grid';
    });

    const prevButtonNode = emblaNode.querySelector('.embla__prev') as HTMLElement;
    const nextButtonNode = emblaNode.querySelector('.embla__next') as HTMLElement;

    prevButtonNode.addEventListener('click', () => emblaApi.scrollPrev(), false)
    nextButtonNode.addEventListener('click', () => emblaApi.scrollNext(), false)
  }

  setupCompaniesBlock();
</script>

<style>
  .embla {
    overflow: hidden;
  }

  .embla__viewport {
    position: relative;
  }

  .embla__container {
    display: flex;
  }

  .embla__slide {
    flex: 0 0 100%;

    height: 320px;
    
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .embla__control {
    position: absolute;

    width: 64px;
    height: 64px;
    
    z-index: 100;

    top: 50%;
    transform: translateY(-50%);

    justify-content: center;
    align-items: center;
  }

  .embla__prev {
    left: 40px;
  }

  .embla__prev>.embla__button__svg {
    margin-right: 2px;
  }

  .embla__next {
    right: 40px;
  }

  .embla__next>.embla__button__svg {
    margin-left: 2px;
  }

  .embla__button__svg {
    width: 32px;
    height: 32px;
  }

  .slide-image {
    transform: scale(var(--logo-scale, 1));
    aspect-ratio: 3/2;

    object-fit: contain;

    max-width: 50%;
    height: 100%;
  }

  :root {
    --logos-bg: hsla(var(--color-stone-10), 1);
    /* --logos-bg: hsl(217.46deg 77.24% 85.16%); */
    /* --logos-bg: #e3d0b3; */
    --logos-text: hsla(var(--color-gray-10), 1);
    --logos-text-light: hsla(var(--color-gray-30), 1);
  }

  .companies {
    @apply px-5 pb-20 pt-8;
    background-color: var(--logos-bg);
    --container-max-width: 90vw;
    --logo-card-size: 130px;
  }

  @media screen and (max-width: 966px) {
    .companies {
      --container-max-width: 80vw;
      --logo-card-size: 150px;
    }

    .embla__prev {
      left: 8px;
      width: 48px;
      height: 48px;
    }

    .embla__next {
      right: 8px;
      width: 48px;
      height: 48px;
    }

    .embla__button__svg {
      width: 32px;
      height: 32px;
    }
  }

  .companies h3 {
    @apply mb-10 text-4xl lg:mb-6;
    -webkit-box-decoration-break: clone;
    -webkit-text-fill-color: transparent;
    background: linear-gradient(to right bottom, var(--logos-text-light) 30%, var(--logos-text));
    -webkit-background-clip: text;
    line-height: 1.3;
    text-align: center;
  }

  .companies-list {
    @apply mx-auto mb-6 grid items-center justify-center gap-4;
    max-width: var(--container-max-width);
    grid-template-columns: repeat(auto-fill, minmax(var(--logo-card-size), 1fr));
    justify-items: center;

    display: none;
  }

  .companies-item > img,
  .companies-item > svg {
    object-fit: contain;
    width: var(--logo-card-size);
    aspect-ratio: 3/2;
    transform: scale(var(--logo-scale, 1));
  }

  .companies-item > svg {
    width: fit-content;
  }

  .companies-item[data-logo-offset] > img {
    transform: translateY(-5%);
  }

  .companies-add-yours {
    @apply mx-auto flex max-w-6xl justify-center gap-1 p-3 text-xs italic;
  }

  .companies-bottom-block {
    @apply flex flex-col justify-center;
  }

  .companies-add-yours > span {
    color: var(--logos-text);
  }

  .companies-see-all {
    @apply mx-auto flex justify-center px-5 py-3;
  }
</style>
